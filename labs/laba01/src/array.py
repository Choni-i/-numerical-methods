# -*- coding: utf-8 -*-
"""parametrs.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1SJ0n0Mh6wBP7DNpXf_rvBxG0BjaFPOnf
"""

import numpy as np
import statistics

M = np.array([[-3., -1., -13.], [26.8, 22.4, 46.], [5., 3., 15.]])
print("Задана матрица:")
for i in range(3):
  print(M[i])
print("\n")
det = np.linalg.det(M)
if (det != 0):
    print(f"Обратная матрица существует, так как определитель не равен нулю, а равен = {det}\n")

Ver = []
N = 9
a = b = 0.001
for i in range(2**N):
    Tmp = M.copy()
    matr = np.full(N, 0)
    for t in range(N):
      if i % 2:
         matr[t] = 1
      i, rest = divmod(i, 2)
    matr = matr.reshape(3, 3)
    #print(matr)

    for l in range(3):
      for k in range(3):
        if matr[l][k] == 1:
          Tmp[l][k] = M[l][k]*(1+a)
        else:
          Tmp[l][k] = M[l][k]*(1-a)
    det_tmp = np.linalg.det(Tmp)
    Ver.append(det_tmp)


otr = [min(Ver),max(Ver)]
print(f"Получили отрезок значений определителя = {otr}. 0 не принадлежит отрезку -> обратная матрица существует")

average = statistics.mean(Ver)
error = (abs(det - average)) / abs(det)
print(f"Относительная погрешность результата = {error}")