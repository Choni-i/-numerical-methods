# -*- coding: utf-8 -*-
"""parametrs.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1SJ0n0Mh6wBP7DNpXf_rvBxG0BjaFPOnf
"""

import numpy as np
import warnings

def float_exp():
    k = 0
    n = np.single(1)
    while n != 0:
      n = np.single(n/2)
      k += 1
    print(f'Float zero is 2^(-{k})')

    k = 0
    n = np.single(1)
    while n!=np.inf:
        n = np.single(2*n)
        k += 1
    print(f'Float infinity is 2^{k}')

    k = 0
    n = np.single(1)
    while np.single(1) + n > np.single(1):
        n = np.single(n/2)
        k += 1
    print(f'Float epsilon is 2^(-{k})\n')

def double_exp():
    k = 0
    n = np.double(1)
    while n != 0:
      n = np.double(n/2)
      k += 1
    print(f'Double zero is 2^(-{k})')

    k = 0
    n = np.double(1)
    while n!=np.inf:
        n = np.double(2*n)
        k += 1
    print(f'Double infinity is 2^{k}')

    k = 0
    n = np.double(1)
    while np.double(1) + n > np.double(1):
        n = np.double(n/2)
        k += 1
    print(f'Double epsilon is 2^(-{k})\n')


def longdouble_exp():
    k = 0
    n = np.longdouble(1)
    while n != 0:
      n = np.longdouble(n/2)
      k += 1
    print(f'Longdouble zero is 2^(-{k})')

    k = 0
    n = np.longdouble(1)
    while n!=np.inf:
        n = np.longdouble(2*n)
        k += 1
    print(f'Longdouble infinity is 2^{k}')

    k = 0
    n = np.longdouble(1)
    while np.longdouble(1) + n > np.longdouble(1):
        n = np.longdouble(n/2)
        k += 1
    print(f'Longdouble epsilon is 2^(-{k})\n')



warnings.filterwarnings('ignore')
float_exp()
double_exp()
longdouble_exp()